<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hifriends.dao.UserpoolMapper" >
    <resultMap id="BaseResultMap" type="com.hifriends.model.Userpool" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="session_id" property="sessionId" jdbcType="VARCHAR" />
        <result column="valid_time" property="validTime" jdbcType="TIMESTAMP" />
        <result column="is_used" property="isUsed" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, username, session_id, valid_time, is_used, create_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from userpool
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from userpool
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.hifriends.model.Userpool" >
        insert into userpool (id, username, session_id,
        valid_time, is_used, create_time
        )
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{sessionId,jdbcType=VARCHAR},
        #{validTime,jdbcType=TIMESTAMP}, #{isUsed,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.hifriends.model.Userpool" >
        insert into userpool
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="sessionId != null" >
                session_id,
            </if>
            <if test="validTime != null" >
                valid_time,
            </if>
            <if test="isUsed != null" >
                is_used,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null" >
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="sessionId != null" >
                #{sessionId,jdbcType=VARCHAR},
            </if>
            <if test="validTime != null" >
                #{validTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isUsed != null" >
                #{isUsed,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hifriends.model.Userpool" >
        update userpool
        <set >
            <if test="username != null" >
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="sessionId != null" >
                session_id = #{sessionId,jdbcType=VARCHAR},
            </if>
            <if test="validTime != null" >
                valid_time = #{validTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isUsed != null" >
                is_used = #{isUsed,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hifriends.model.Userpool" >
    update userpool
    set username = #{username,jdbcType=VARCHAR},
      session_id = #{sessionId,jdbcType=VARCHAR},
      valid_time = #{validTime,jdbcType=TIMESTAMP},
      is_used = #{isUsed,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


</mapper>